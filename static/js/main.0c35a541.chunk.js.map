{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.jsx","components/CountryPicker/CountryPicker.jsx","api/index.js","components/Chart/Chart.jsx","App.js","index.js","App.module.css","components/CountryPicker/CountryPicker.module.css","components/Chart/Chart.module.css","Images/covidimage.png"],"names":["module","exports","Cards","data","confirmed","deaths","lastUpdate","recovered","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","Countries","handleCountryChange","useState","countries","setCountries","useEffect","a","fetchCountries","fetchAPI","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","map","country","i","key","url","fetchData","changeableurl","axios","get","console","log","fetchDailyData","modifiedData","dailyData","total","date","reportDate","name","Chart","setDailyData","initialDailyData","fetchMyAPI","barChart","labels","datasets","label","backgroundColor","options","legend","display","title","text","lineChart","borderColor","fill","App","state","fetchedData","setState","this","src","Image","image","alt","CountryPicker","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0c35a541.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__3bjn6\",\"card\":\"Cards_card__eGUfZ\",\"infected\":\"Cards_infected__-adYp\",\"recovered\":\"Cards_recovered__1aizD\",\"deaths\":\"Cards_deaths__Qdjzq\"};","import React from \"react\";\nimport { Card, CardContent, Typography, Grid } from \"@material-ui/core\";\nimport styles from \"./Cards.module.css\";\nimport CountUp from \"react-countup\";\nimport cx from \"classnames\";\n\nconst Cards = ({ data: { confirmed, deaths, lastUpdate, recovered } }) => {\n  // console.log(confirmed);\n  if (!confirmed) {\n    return \"Loading...\";\n  }\n\n  return (\n    <div className={styles.container}>\n      <Grid container spacing={3} justify=\"center\">\n        <Grid\n          item\n          component={Card}\n          xs={12}\n          md={3}\n          className={cx(styles.card, styles.infected)}\n        >\n          <CardContent>\n            <Typography color=\"textSecondary\" gutterBottom>\n              Infected\n            </Typography>\n            <Typography variant=\"h5\">\n              <CountUp\n                start={0}\n                end={confirmed.value}\n                duration={2.5}\n                separator=\",\"\n              />\n            </Typography>\n            <Typography color=\"textSecondary\">\n              {new Date(lastUpdate).toDateString()}\n            </Typography>\n            <Typography variant=\"body2\">\n              Number of infected Cases of COVID-19\n            </Typography>\n          </CardContent>\n        </Grid>\n        <Grid\n          item\n          component={Card}\n          xs={12}\n          md={3}\n          className={cx(styles.card, styles.recovered)}\n        >\n          <CardContent>\n            <Typography color=\"textSecondary\" gutterBottom>\n              Recovered\n            </Typography>\n            <Typography variant=\"h5\">\n              {\" \"}\n              <CountUp\n                start={0}\n                end={recovered.value}\n                duration={2.5}\n                separator=\",\"\n              />\n            </Typography>\n            <Typography color=\"textSecondary\">\n              {new Date(lastUpdate).toDateString()}\n            </Typography>\n            <Typography variant=\"body2\">\n              Number of recoveries from COVID-19\n            </Typography>\n          </CardContent>\n        </Grid>\n\n        <Grid\n          item\n          component={Card}\n          xs={12}\n          md={3}\n          className={cx(styles.card, styles.deaths)}\n        >\n          <CardContent>\n            <Typography color=\"textSecondary\" gutterBottom>\n              Deaths\n            </Typography>\n            <Typography variant=\"h5\">\n              <CountUp\n                start={0}\n                end={deaths.value}\n                duration={2.5}\n                separator=\",\"\n              />\n            </Typography>\n            <Typography color=\"textSecondary\">\n              {\" \"}\n              {new Date(lastUpdate).toDateString()}\n            </Typography>\n            <Typography variant=\"body2\">\n              Number of deaths caused by COVID-19\n            </Typography>\n          </CardContent>\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default Cards;\n","import React, { useState, useEffect } from \"react\";\nimport { NativeSelect, FormControl } from \"@material-ui/core\";\n\nimport { fetchCountries } from \"../../api\";\n\nimport styles from \"./CountryPicker.module.css\";\n\nconst Countries = ({ handleCountryChange }) => {\n  const [countries, setCountries] = useState([]);\n\n  useEffect(() => {\n    const fetchAPI = async () => {\n      setCountries(await fetchCountries());\n    };\n\n    fetchAPI();\n  }, []);\n\n  return (\n    <FormControl className={styles.formControl}>\n      <NativeSelect\n        defaultValue=\"\"\n        onChange={(e) => handleCountryChange(e.target.value)}\n      >\n        <option value=\"\">Global</option>\n        {countries.map((country, i) => (\n          <option key={i} value={country}>\n            {country}\n          </option>\n        ))}\n      </NativeSelect>\n    </FormControl>\n  );\n};\n\nexport default Countries;\n","import axios from \"axios\";\nimport CountryPicker from \"../components/CountryPicker/CountryPicker\";\n\nconst url = \"https://covid19.mathdro.id/api\";\n\nexport const fetchData = async (country) => {\n  let changeableurl = url;\n  if (country) {\n    changeableurl = `${url}/countries/${country}`;\n  }\n  try {\n    const {\n      data: { confirmed, recovered, deaths, lastUpdate },\n    } = await axios.get(changeableurl);\n\n    return { confirmed, recovered, deaths, lastUpdate };\n    // console.log(response);\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchDailyData = async () => {\n  try {\n    const { data } = await axios.get(`${url}/daily`);\n\n    const modifiedData = data.map((dailyData) => ({\n      confirmed: dailyData.confirmed.total,\n      deaths: dailyData.deaths.total,\n      date: dailyData.reportDate,\n    }));\n    return modifiedData;\n    // console.log(data);\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchCountries = async () => {\n  try {\n    const {\n      data: { countries },\n    } = await axios.get(`${url}/countries`);\n    // console.log(response);\n    return countries.map((country) => country.name);\n  } catch (error) {\n    console.log(error);\n  }\n};\n","import React, { useState, useEffect } from \"react\";\nimport { Line, Bar } from \"react-chartjs-2\";\n\nimport { fetchDailyData } from \"../../api\";\n\nimport styles from \"./Chart.module.css\";\n\nconst Chart = ({ data: { confirmed, recovered, deaths }, country }) => {\n  const [dailyData, setDailyData] = useState({});\n\n  useEffect(() => {\n    const fetchMyAPI = async () => {\n      const initialDailyData = await fetchDailyData();\n\n      setDailyData(initialDailyData);\n    };\n\n    fetchMyAPI();\n  }, []);\n\n  const barChart = confirmed ? (\n    <Bar\n      data={{\n        labels: [\"Infected\", \"Recovered\", \"Deaths\"],\n        datasets: [\n          {\n            label: \"People\",\n            backgroundColor: [\n              \"rgba(0, 0, 255, 0.5)\",\n              \"rgba(0, 255, 0, 0.5)\",\n              \"rgba(255, 0, 0, 0.5)\",\n            ],\n            data: [confirmed.value, recovered.value, deaths.value],\n          },\n        ],\n      }}\n      options={{\n        legend: { display: false },\n        title: { display: true, text: `Current state in ${country}` },\n      }}\n    />\n  ) : null;\n\n  const lineChart = dailyData[0] ? (\n    <Line\n      data={{\n        labels: dailyData.map(({ date }) => date),\n        datasets: [\n          {\n            data: dailyData.map((data) => data.confirmed),\n            label: \"Infected\",\n            borderColor: \"#3333ff\",\n            fill: true,\n          },\n          {\n            data: dailyData.map((data) => data.deaths),\n            label: \"Deaths\",\n            borderColor: \"red\",\n            backgroundColor: \"rgba(255, 0, 0, 0.5)\",\n            fill: true,\n          },\n        ],\n      }}\n    />\n  ) : null;\n\n  return (\n    <div className={styles.container}>{country ? barChart : lineChart}</div>\n  );\n};\n\nexport default Chart;\n","import React from \"react\";\n\nimport Cards from \"./components/Cards/Cards\";\nimport Chart from \"./components/Chart/Chart\";\nimport CountryPicker from \"./components/CountryPicker/CountryPicker\";\n\nimport styles from \"./App.module.css\";\nimport { fetchData } from \"./api/index\";\nimport Image from \"./Images/covidimage.png\";\n\nclass App extends React.Component {\n  state = {\n    data: {},\n    country: \"\",\n  };\n\n  async componentDidMount() {\n    const fetchedData = await fetchData();\n    this.setState({ data: fetchedData });\n  }\n  handleCountryChange = async (country) => {\n    const fetchedData = await fetchData(country);\n    this.setState({ data: fetchedData, country: country });\n    console.log(fetchedData);\n  };\n\n  render() {\n    const { data, country } = this.state;\n    return (\n      <div className={styles.container}>\n        <img src={Image} className={styles.image} alt=\"COVID19\" />\n        <Cards data={data} />\n        <CountryPicker handleCountryChange={this.handleCountryChange} />\n        <Chart data={data} country={country} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1MQN3\",\"image\":\"App_image__3byI1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__2p8f9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__1PIOn\"};","module.exports = __webpack_public_path__ + \"static/media/covidimage.d7265326.png\";"],"sourceRoot":""}